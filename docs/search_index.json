[
["index.html", "Template Course Overview 0.1 Course Aims 0.2 Intended Learning Outcomes", " Template Course psyTeachR 2019-01-20 Overview Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer nec odio. Praesent libero. Sed cursus ante dapibus diam. Sed nisi. Nulla quis sem at nibh elementum imperdiet. Duis sagittis ipsum. Praesent mauris. Fusce nec tellus sed augue semper porta. Mauris massa. Vestibulum lacinia arcu eget nulla. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. 0.1 Course Aims Aim 1 Aim 2 Aim 3 0.2 Intended Learning Outcomes By the end of this course students will be able to: ILO 1 ILO 2 ILO 3 "],
["setup.html", "Chapter 1 Setup 1.1 Starting a new book 1.2 Adding Chapters 1.3 Call-out Blocks", " Chapter 1 Setup 1.1 Starting a new book 1.1.1 Create a new github repository For psyTeachR courses, the repository should be created by the course lead on the psyTeachR github and have a name structure like this: ug1-practical ug2-practical ug3-stats ug4-dissertation msc-data-skills 1.1.2 Fork the repository Our main course pages are under https://psyteachr.github.io, but you should work on your course page on a forked version in your own github account. On the code tab of the new repository, click the Fork button. Figure 1.1: Fork a repository from the psyTeachR account If you’re a member of psyTeachR, you’ll get this interface telling you that you’ve already forked this project. You just need to choose your personal account. (#fig:img-already_forked)Choose your personal account You’ll see this animation for a few seconds while the repository is being forked to your account. Figure 1.2: Just be patient 1.1.3 Make a new RStudio Project Click the green Clone or download button on your personal forked repository and copy the URL (use HTTPS unless you know you’ve set up SSH). Figure 1.3: Find the URL to clone Under the File menu in RStudio, choose New Project.. and choose Version Control from the list of options. (#fig:img-version_control)File &gt; New Project… &gt; Version Control Choose Git from the next screen. Figure 1.4: Choose Git Paste the URL you copied from your repository into the Repository URL. Keep the Project directory name the same as the repository name (it should default to this). You can Create the project as a subdirectory anywhere on your computer; I recommend making a directory to keep all your github R projects in. (#fig:img-clone_repo)Clone your github repository to the RStudio project 1.1.4 Download the template Download the psyTeachR Bookdown Course Template to you computer, unzip it, and move the files into the directory of your new RStudio project. 1.1.5 Edit the template 1.1.5.1 _output.yml Open _output.yml. It should look like this: bookdown::gitbook: default: true includes: after_body: webex.js css: style.css config: toc: before: | &lt;li&gt;&lt;a href=&quot;./&quot;&gt;Book Template&lt;/a&gt;&lt;/li&gt; after: | &lt;li&gt;&lt;a href=&quot;https://psyteachr.github.io/&quot; target=&quot;blank&quot;&gt;PsyTeachR&lt;/a&gt;&lt;/li&gt; download: [] bookdown::pdf_book: includes: in_header: preamble.tex latex_engine: xelatex citation_package: natbib keep_tex: yes Change “Book Template” in the config:toc:before: section to the name of your book. This is the text readers will see at the top of your table of contents that brings them back to the start of the book. Save and close this file. 1.1.5.2 _bookdown.yml Open _bookdown.yml. It should look like this: book_filename: &quot;book-template&quot; new_session: yes output_dir: &quot;docs&quot; delete_merged_file: true language: ui: chapter_name: &quot;Chapter &quot; Change the book_filename to the name of your repository (e.g., “ug1-practical”). You can change the chapter_name from “Chapter” to “Lab” or something else that makes sense for your course if you want. Save and close this file. 1.1.5.3 index.Rmd Open index.Rmd. The top YAML header should look like this: --- title: &quot;Template Course&quot; author: &quot;psyTeachR&quot; date: &quot;2019-01-20&quot; site: bookdown::bookdown_site documentclass: book bibliography: [book.bib, packages.bib] biblio-style: apalike link-citations: yes description: &quot;This is a template. Use it to start a new course book.&quot; --- Update the title, author, and description strings. For now, don’t change anything in the R chunk at the top. Now you can edit the overview. Replace the filler text with a description of your course and fill in the course aims and ILOs. Save and close this file. 1.1.6 Render the book Now you’re ready to create the book. Run the following code in the console. bookdown::render_book(&quot;index.Rmd&quot;) You’ll see a lot of text in the console window, which should end in something that looks like: Output created: docs/index.html [1] &quot;/Users/lisad/rproj/psyteachr/book-template/docs/index.html&quot; The last line is the location of your new book. You can copy and paste that in a web browser to view the book. Alternatively, you can open the docs directory in the Files pane of RStudio, click on index.html, and choose View in Web Browser. (#fig:img-open_from_docs)Open your book from the Files pane in RStudio. 1.2 Adding Chapters (LISA ADD THIS) 1.3 Call-out Blocks The psyTeachR course book style include four types of call-out blocks that you can use to emphasise text. 1.3.1 Danger &#96;&#96;&#96;{block, type=\"danger\"} Note dangerous things that will break code. &#96;&#96;&#96; Note dangerous things that will break code. 1.3.2 Warning &#96;&#96;&#96;{block, type=\"warning\"} Warn readers. &#96;&#96;&#96; Warn readers. 1.3.3 Info &#96;&#96;&#96;{block, type=\"info\"} Give further information. &#96;&#96;&#96; Give further information. 1.3.4 Try &#96;&#96;&#96;{block, type=\"try\"} Stop and try something. &#96;&#96;&#96; Stop and try something. "],
["webex.html", "Chapter 2 Webex 2.1 Fill-In-The-Blanks (fitb()) 2.2 Multiple Choice (mcq()) 2.3 True or False (torf()) 2.4 Hidden solutions and hints (hide() and unhide())", " Chapter 2 Webex Use the following code to install webex devtools::install_github(&quot;dalejbarr/webex&quot;) library(webex) 2.1 Fill-In-The-Blanks (fitb()) Create fill-in-the-blank questions using fitb(), providing the answer as the first argument. 2 + 2 is You can also create these questions dynamically, using variables from your R session. The square root of 25 is: The blanks are case-sensitive; if you don’t care about case, use the argument ignore_case = TRUE. What is the letter after D? If you want to ignore differences in whitespace use, use the argument ignore_ws = TRUE and include spaces in your answer anywhere they could be acceptable.. How do you load the tidyverse package? You can set more than one possible correct answer by setting the answers as a vector. Type a vowel: 2.2 Multiple Choice (mcq()) “Never gonna give you up, never gonna: let you go turn you down run away let you down” “I bless the rains guess it rains sense the rain down in Africa” -Toto “There’s nothing that a hundred men on Mars or more named Marv could ever do” 2.3 True or False (torf()) You can permute values in a vector using sample(). TRUE FALSE 2.4 Hidden solutions and hints (hide() and unhide()) Recreate the scatterplot below, using the built-in cars dataset. I need a hint ?plot Solution with(cars, plot(speed, dist)) "]
]
