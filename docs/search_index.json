[
["index.html", "Template Course Overview 0.1 Course Aims 0.2 Intended Learning Outcomes", " Template Course Lisa DeBruine 2019-01-25 Overview Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer nec odio. Praesent libero. Sed cursus ante dapibus diam. Sed nisi. Nulla quis sem at nibh elementum imperdiet. Duis sagittis ipsum. Praesent mauris. Fusce nec tellus sed augue semper porta. Mauris massa. Vestibulum lacinia arcu eget nulla. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. 0.1 Course Aims Aim 1 Aim 2 Aim 3 0.2 Intended Learning Outcomes By the end of this course students will be able to: ILO 1 ILO 2 ILO 3 "],
["setup.html", "Chapter 1 Setup 1.1 Resources 1.2 Starting a new book 1.3 Adding chapters", " Chapter 1 Setup 1.1 Resources The best resource for creating a course book is the bookdown website. Yihui Xie's Bookdown book can answer most of the questions you'll have. The guide below is just a quick start for the specific templates we're using at UofG Psychology. 1.2 Starting a new book 1.2.1 Create a new github repository For psyTeachR courses, the repository should be created by the course lead on the psyTeachR github and have a name structure like this: ug1-practical ug2-practical ug3-stats ug4-dissertation msc-data-skills 1.2.2 Fork the repository Our main course pages are under https://psyteachr.github.io, but you should work on your course page on a forked version in your own github account. On the Code tab of the new repository, click the Fork button. Figure 1.1: Fork a repository from the psyTeachR account If you're a member of psyTeachR, you'll get this interface telling you that you've already forked this project. You just need to choose your personal account. (#fig:img-already_forked)Choose your personal account You'll see this animation for a few seconds while the repository is being forked to your account. Figure 1.2: Just be patient 1.2.3 Make a new RStudio project Click the green Clone or download button on your personal forked repository and copy the URL (use HTTPS unless you know you've set up SSH). Figure 1.3: Find the URL to clone Under the File menu in RStudio, choose New Project.. and choose Version Control from the list of options. (#fig:img-version_control)File &gt; New Project... &gt; Version Control Choose Git from the next screen. Figure 1.4: Choose Git Paste the URL you copied from your repository into the Repository URL. Keep the Project directory name the same as the repository name (it should default to this). You can Create the project as a subdirectory anywhere on your computer; I recommend making a directory to keep all your github R projects in. (#fig:img-clone_repo)Clone your github repository to the RStudio project 1.2.4 Download the template Download the psyTeachR Bookdown Course Template to you computer, unzip it, and move the files into the directory of your new RStudio project. 1.2.5 Edit the template 1.2.5.1 _output.yml Open _output.yml. It should look like this: bookdown::gitbook: default: true includes: after_body: webex.js css: style.css config: toc: before: | &lt;li&gt;&lt;a href=&quot;./&quot;&gt;Book Template&lt;/a&gt;&lt;/li&gt; after: | &lt;li&gt;&lt;a href=&quot;https://psyteachr.github.io/&quot; target=&quot;blank&quot;&gt;PsyTeachR&lt;/a&gt;&lt;/li&gt; download: [] bookdown::pdf_book: includes: in_header: preamble.tex latex_engine: xelatex citation_package: natbib keep_tex: yes Change &quot;Book Template&quot; in the config:toc:before: section to the name of your book. This is the text readers will see at the top of your table of contents that brings them back to the start of the book. Save and close this file. 1.2.5.2 _bookdown.yml Open _bookdown.yml. It should look like this: book_filename: &quot;book-template&quot; new_session: yes output_dir: &quot;docs&quot; delete_merged_file: true language: ui: chapter_name: &quot;Chapter &quot; Change the book_filename to the name of your repository (e.g., &quot;ug1-practical&quot;). You can change the chapter_name from &quot;Chapter &quot; to &quot;Lab &quot; or something else that makes sense for your course if you want. Save and close this file. 1.2.5.3 index.Rmd Open index.Rmd. The top YAML header should look like this: --- title: &quot;Template Course&quot; author: &quot;psyTeachR&quot; date: &quot;2019-01-25&quot; site: bookdown::bookdown_site documentclass: book bibliography: [book.bib, packages.bib] biblio-style: apalike link-citations: yes description: &quot;This is a template. Use it to start a new course book.&quot; --- Update the title, author, and description strings. For now, don't change anything in the R chunk at the top. Now you can edit the overview. Replace the filler text with a description of your course and fill in the course aims and ILOs. Save and close this file. 1.2.6 Render the book Now you're ready to create the book. Run the following code in the console. bookdown::render_book(&quot;index.Rmd&quot;) You'll see a lot of text in the console window, which should end in something that looks like: Output created: docs/index.html [1] &quot;/Users/lisad/rproj/psyteachr/book-template/docs/index.html&quot; The last line is the location of your new book. You can copy and paste that in a web browser to view the book. Alternatively, you can open the docs directory in the Files pane of RStudio, click on index.html, and choose View in Web Browser. (#fig:img-open_from_docs)Open your book from the Files pane in RStudio. 1.3 Adding chapters Create new chapters by creating new R Markdown files. Under the File menu in RStudio, choose New File and R Markdown.... Don't bother adding a title or changing any default settings; the first thing we'll do is delete all of the content. (#fig:img-new_rmd)Make a new chapter in a new .Rmd file 1.3.1 Setup R chunk Every .Rmd file should start with the setup chunk to load libraries you'll probably use on every page and set consistent styles for figures across books. The code is located in separate files, so you can make updates in a single place that affect every chapter. &#96;&#96;&#96;{r psyteachr-setup, include = FALSE} source(\"R/psyteachr_setup.R\") # psyTeachR styles and functions source(\"R/my_setup.R\") # book-specific styles and functions &#96;&#96;&#96; If there is a package you'll need in every chapter, you can add it to my_setup.R. Don't edit psyteachr_setup.R; this file is likely to need periodic updating and it is easier to just replace it than to figure out what changes you made. Any code in my_setup.R will be loaded after and overrule code in psyteachr_setup.R (e.g., if you want to set a different ggplot theme -- but please don't!). You can also include chapter-specific packages in this chunk. 1.3.2 Content After the initial R chunk, start your chapter with a level 1 header. This will be the chapter title. You can then continue to write your chapter in R Markdown. 1.3.3 Rendering a single chapter After you've added several chapters, the whole book might take a long time to render. If you want to quickly check the formatting on a single chapter, use the following code. bookdown::preview_chapter(&quot;02-style-guide.Rmd&quot;) "],
["psyteachr-style-guide.html", "Chapter 2 PsyTeachR Style Guide 2.1 Headers 2.2 Text styles 2.3 Vocabulary 2.4 Code chunks 2.5 Figures 2.6 Call-out Blocks", " Chapter 2 PsyTeachR Style Guide The following are specific recommendations to make our course materials look and act consistently to help students navigate more easily from one year to the next. These styles will be continuously evolving, so do discuss with the team if any recommendations don't meet your needs or you want to propose new recommendations. 2.1 Headers Level 1 headers (i.e., chapter titles) should be title case. The first letter of all words should be uppercase except articles, prepositions, and be verbs in the middle of the title (e.g., a, an, the, is, are in, on). Level 2 or higher headings should start with an uppercase letter and the rest of the heading should be lowercase except proper nouns (e.g., RStudio, R, psyTeachR, Niamh). Chapters should usually have between three and eight level 2 headers. There will obviously be exceptions, but if you consistently have more or fewer sections, think about restructuring your content. 2.2 Text styles Emphasised text should be in italics (e.g., This is a particularly fun project.) Exactly quoted names of buttons or interface objects should be bold (e.g., Under the File menu in RStudio, choose New File and R Markdown....) Inline code should be in backticks Specific words: RStudio R Markdown LaTeX (you don't have to be fancy with \\({\\LaTeX}\\)) 2.3 Vocabulary There is a lot of cultural variation in what we call punctuation. For psyTeachR books, use the following conventions. Symbol psyTeachR Term AKA () (round) brackets parentheses [] square brackets brackets {} curly brackets squiggly brackets &lt;&gt; chevrons angled brackets / guillemets &lt; less than &gt; greater than &amp; ampersand &quot;and&quot; symbol # hash pound / octothorpe / slash forward slash \\ backslash - dash hyphen / minus _ underscore * asterisk star ^ caret power symbol ~ tilde twiddle / squiggle = equal sign == double equal sign . period full stop / point ! exclamation mark bang / not ? question mark ' single quote quote / apostrophe &quot; double quote quote | pipe vertical bar , comma ; semi-colon : colon @ &quot;at&quot; symbol various hilarious regional terms 2.4 Code chunks 2.4.1 Including headers If you want to show students an example of a code chunk that includes the header, add an option called verbatim to your code chunk and set it equal to what you want displayed inside the curly brackets. Make sure you set eval to false to stop the code chunk from being run. ```{r verbatim-example, eval = FALSE, verbatim = 'r name, eval = FALSE'} # set eval to FALSE to prevent a code chunk from running rnorm(10) ``` The &quot;verbatim&quot; option is not standard to bookdown. It is only available if you include the code from the &quot;R/psyteachr_setup.R&quot; file. 2.5 Figures 2.5.1 R Plots Any graphs should be dynamically created in an R code block. Make sure to set out.width, fig.align, and fig.cap in the chunk and set echo = FALSE. ```{echo=FALSE, out.width='100%', fig.align='center', fig.cap='Dynamically created plot.'} ggplot(iris, aes(Sepal.Length, Sepal.Width, color = Species)) + geom_point() + geom_smooth(method = lm) ``` Figure 2.1: Dynamically created plot. 2.5.2 Images Static images, like screenshots, should be stored in a directory called images and displayed using the knitr::include_graphics function in a code block. ```{r img-psyteacher-logo, echo=FALSE, out.width=&quot;100%&quot;, fig.align=&quot;center&quot;, fig.cap=&quot;PsyTeachR Logo&quot;} knitr::include_graphics(&quot;images/psyteachr_logo.png&quot;) ``` Figure 2.2: PsyTeachR Logo displayed by the previous code block. You can learn more about including figures and images in the Bookdown book. 2.6 Call-out Blocks The psyTeachR course book style includes four types of call-out blocks that you can use to emphasise text. 2.6.1 Danger ```{block, type=&quot;danger&quot;}Note dangerous things that will break code.``` Note dangerous things that will break code. 2.6.2 Warning ```{block, type=&quot;warning&quot;}Warn readers.``` Warn readers. 2.6.3 Info ```{block, type=&quot;info&quot;}Give further information.``` Give further information. 2.6.4 Try ```{block, type=&quot;try&quot;}Stop and try something.``` Stop and try something. "],
["webex.html", "Chapter 3 Webex 3.1 Fill-In-The-Blanks (fitb()) 3.2 Multiple Choice (mcq()) 3.3 True or False (torf()) 3.4 Hidden solutions and hints (hide() and unhide())", " Chapter 3 Webex Use the following code to install webex: devtools::install_github(&quot;dalejbarr/webex&quot;) The webex package is called in the setup chunk, so you don't need to call it on every page you want to use webex. 3.1 Fill-In-The-Blanks (fitb()) Create fill-in-the-blank questions using fitb(), providing the answer as the first argument. 2 + 2 is You can also create these questions dynamically, using variables from your R session. The square root of 25 is: The blanks are case-sensitive; if you don't care about case, use the argument ignore_case = TRUE. What is the letter after D? If you want to ignore differences in whitespace use, use the argument ignore_ws = TRUE and include spaces in your answer anywhere they could be acceptable.. How do you load the tidyverse package? You can set more than one possible correct answer by setting the answers as a vector. Type a vowel: 3.2 Multiple Choice (mcq()) &quot;Never gonna give you up, never gonna: let you go turn you down run away let you down&quot; &quot;I bless the rains guess it rains sense the rain down in Africa&quot; -Toto &quot;There's nothing that a hundred men on Mars or more named Marv could ever do&quot; 3.3 True or False (torf()) You can permute values in a vector using sample(). TRUE FALSE 3.4 Hidden solutions and hints (hide() and unhide()) Recreate the scatterplot below, using the built-in cars dataset. I need a hint ?plot Solution with(cars, plot(speed, dist)) "]
]
