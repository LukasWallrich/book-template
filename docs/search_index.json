[
["psyteachr-style-guide.html", "Chapter 2 PsyTeachR Style Guide 2.1 Headers 2.2 Text styles 2.3 Vocabulary 2.4 Code chunks 2.5 Figures 2.6 Call-out Blocks", " Chapter 2 PsyTeachR Style Guide The following are specific recommendations to make our course materials look and act consistently to help students navigate more easily from one year to the next. These styles will be continuously evolving, so do discuss with the team if any recommendations don't meet your needs or you want to propose new recommendations. 2.1 Headers Level 1 headers (i.e., chapter titles) should be title case. The first letter of all words should be uppercase except articles, prepositions, and be verbs in the middle of the title (e.g., a, an, the, is, are in, on). Level 2 or higher headings should start with an uppercase letter and the rest of the heading should be lowercase except proper nouns (e.g., RStudio, R, psyTeachR, Niamh). Chapters should usually have between three and eight level 2 headers. There will obviously be exceptions, but if you consistently have more or fewer sections, think about restructuring your content. 2.2 Text styles Emphasised text should be bold (e.g., This is a particularly fun project.) Exactly quoted names of buttons or interface objects should be code bold (e.g., Under the File menu in RStudio, choose New File and R Markdown....) Inline code should be in backticks Avoid italics for dyslexia-friendly reading. 2.3 Vocabulary There is a lot of cultural variation in what we call punctuation. For psyTeachR books, use the following conventions. Symbol psyTeachR Term AKA () (round) brackets parentheses [] square brackets brackets {} curly brackets squiggly brackets &lt;&gt; chevrons angled brackets / guillemets &lt; less than &gt; greater than &amp; ampersand &quot;and&quot; symbol # hash pound / octothorpe / slash forward slash \\ backslash - dash hyphen / minus _ underscore * asterisk star ^ caret power symbol ~ tilde twiddle / squiggle = equal sign == double equal sign . period full stop / point ! exclamation mark bang / not ? question mark ' single quote quote / apostrophe &quot; double quote quote | pipe vertical bar , comma ; semi-colon : colon @ &quot;at&quot; symbol various hilarious regional terms 2.3.1 Specific words RStudio R Markdown LaTeX (you don't have to be fancy with \\({\\LaTeX}\\)) 2.4 Code chunks 2.4.1 Including headers If you want to show students an example of a code chunk that includes the header, add an option called verbatim to your code chunk and set it equal to what you want displayed inside the curly brackets. Make sure you set eval to false to stop the code chunk from being run. ```{r verbatim-example, eval = FALSE, verbatim = 'r name, eval = FALSE'} # set eval to FALSE to prevent a code chunk from running rnorm(10) ``` The &quot;verbatim&quot; option is not standard to bookdown. It is only available if you include the code from the &quot;R/psyteachr_setup.R&quot; file. 2.5 Figures 2.5.1 R Plots Any graphs should be dynamically created in an R code block. Make sure to set out.width, fig.align, and fig.cap in the chunk and set echo = FALSE. ```{echo=FALSE, out.width='100%', fig.align='center', fig.cap='Dynamically created plot.'} ggplot(iris, aes(Sepal.Length, Sepal.Width, color = Species)) + geom_point() + geom_smooth(method = lm) ``` Figure 2.1: Dynamically created plot. 2.5.2 Images Static images, like screenshots, should be stored in a directory called images and displayed using the knitr::include_graphics function in a code block. ```{r img-psyteacher-logo, echo=FALSE, out.width=&quot;100%&quot;, fig.align=&quot;center&quot;, fig.cap=&quot;PsyTeachR Logo&quot;} knitr::include_graphics(&quot;images/psyteachr_logo.png&quot;) ``` Figure 2.2: PsyTeachR Logo displayed by the previous code block. You can learn more about including figures and images in the Bookdown book. 2.6 Call-out Blocks The psyTeachR course book style includes four types of call-out blocks that you can use to emphasise text. 2.6.1 Danger ```{block, type=&quot;danger&quot;}Note dangerous things that will break code.``` Note dangerous things that will break code. 2.6.2 Warning ```{block, type=&quot;warning&quot;}Warn readers.``` Warn readers. 2.6.3 Info ```{block, type=&quot;info&quot;}Give further information.``` Give further information. 2.6.4 Try ```{block, type=&quot;try&quot;}Stop and try something.``` Stop and try something. "]
]
